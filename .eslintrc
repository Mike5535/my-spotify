{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint"
  ],
  "rules": {
    "linebreak-style": [
      "error",
      "unix"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "indent": ["error", 4],
    "eol-last": ["error", "always"],
    "semi": ["error", "always"],
    "no-console": 1,
    "consistent-return": 1,
    "no-alert": 2,
    "no-debugger": 1,
    "no-use-before-define": 0,
    "import/no-unresolved": 0,
    "array-callback-return": 1,
    "import/extensions": 0,
    "no-underscore-dangle": 0,
    "no-param-reassign": 0,
    "class-methods-use-this": 0,
    "import/prefer-default-export": 0,
    "no-undef": 0,
    "no-continue": 0,
    "import/no-cycle": 0,
    "no-plusplus": 0,
    "no-useless-escape": 0,
    "func-names": 0,
    "no-restricted-globals": 0,
    "no-restricted-syntax": [
        "error",
        {
          "selector": "ForInStatement",
          "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries }, and iterate over the resulting array."
        }
      ]
  }
}
